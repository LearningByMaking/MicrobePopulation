;jlogo file for MFC


to microPop
 	print "|starting microPop| 
 	init-microPop
 	loop 
 	[
 		see-packet 
 		wait 10 
 	]
 end
 
to init-microPop
  	init-calibration
  	init-hardware 
  	
	make "check55 0 
  	make "oldcheck55 0 
 	
	make "check20 0 
 	make "oldcheck20 0
 
end
 
to init-hardware
 	stopvm ;stop vm makes sure the board is not running
 	ul-power
 	wait 15
 	ul-init         
	wait 15	
	ul-go
 	wait 15	
end calibra

to init-calibration
  make "temp_cal [662 7 1571 83]     ; pairs (adc,temp)
  make "volt_cal [0 0 4095 3.3]      ; pairs (adc,volt)
end

to see-packet
 	make "packet-bytes collect-packet  	
	process-header    
end


to process-header 
  	make "type nth 1 :packet-bytes 	
   if (:type = 55) [ checksum55 :packet-bytes ] 
	;if (:type = 20) [ checksum20 :packet-bytes ] 
end

to checksum55 :packet-bytes
	let [nws ((first :packet-bytes) / 2) + 1] 
  	make "check55 wnth :nws :packet-bytes 
 	if not (:check55 = :oldcheck55)
	[
		process-data-packet
	]  
	make "oldcheck55 :check55  
end

to checksum20 :packet-bytes
	let [nws ((first :packet-bytes) / 2) + 1] 
  	make "check20 wnth :nws :packet-bytes 
 	if not (:check20 = :oldcheck20)
	[
		process-status-packet
	]  
	make "oldcheck20 :check20 
end

to process-data-packet
  	make "Temp wnth 4 :packet-bytes 
  	make "Temp calibrate :Temp :temp_cal
  	make "Volt wnth 5 :packet-bytes 
  	make "Volt calibrate :Volt :volt_cal	  		 
  	print (se "DATA :Temp :Volt)  
end

to process-status-packet
	make "Message wnth 4 :packet-bytes   
  	make "Variable wnth 5 :packet-bytes 
	make "Value wnth 6 :packet-bytes  	 
  	print (se "STATUS :Message :Variable :Value)  
end

to calibrate :n :m
  let [adc0 nth 0 :m]
  let [adc1 nth 2 :m]
  let [val0 nth 1 :m]
  let [val1 nth 3 :m]
  let [slope (:val1 - :val0) / (:adc1 - :adc0)] 
  output  ((:n - :adc0) * :slope) + :val0
end

to valueToADC :n :m
  let [val0 nth 0 :m]
  let [val1 nth 2 :m]
  let [adc0 nth 1 :m]
  let [adc1 nth 3 :m]
  let [slope (:val1 - :val0) / (:adc1 - :adc0)] 
  output  ((:n - :adc0) * :slope) + :val0
end


to collect-packet
output rl $1fc0 30
end

